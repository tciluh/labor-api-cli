name: Test Protocol
description: This is a test protocol
instructions: #we will refer to instruction as steps and vice versa for the length of the example
    - Step 1 : # this is the instruction identifier which is later used for target this instruction with a result
        description: This is step 1 which includes putting a into b and then measuring with the photmeter
        actions:
            - identifier: photometer # the name of the corresponding plugin in labor-api (required)
              action: measure #each plugin supports certain actions (required)
              equationIdentifier: value #each action can define a optional identifier with which it can be referenced in an equation instruction
              wavelength: 420 # this will be passed to the plugin as well as anything which is defined here
              current: 1 # use this to pass arguments to the plugin
        results: # results are what happens when you finished this step/instruction. 
                 # you can specify multiple results and even give each
                 # of these a image to make deciding easier for the user
                 # results support both a short and a long syntax
                 # if you only specify one result, most clients wont display the result description, so feel free to put
                 # anything you like there
            - Something turned green: Step 2 # this is the short hand syntax. 'Something turned green' will be displayed to the user
                                             # as the description of this result. 
                                             # 'Step 2' is the instruction identifier of the instruction/step which should follow
                                             # after this result was encountered/selected by the user.
            - description: Something turned Red # this is the long syntax. again anything after description will be displayed to the user
              nextInstruction: Step 2a # this is the instruction identifier of the instruction/step which should follow after this result
              imagePath: /path/to/image # a relative path to an image which will be displayed to the user when choosing which result applies.
    - Step 2:
        description: This is step 2 where you'll wait for 60 seconds
        timerDuration: 60 # this step will show the user a timer which runs for 60 seconds
        results: # remember, if only a single result is defined for an instruction its description will not be shown to the user
            - This will not be shown to the user: Step 3
    - Step 2a:
        description: This is variant a of Step 2 which is encountered after selecting \'Something turned Red\'
        results: # multiple instruction can have the same 'next step' if their results point to the same instruction identifier
            - After Step 2a was finished the user did nothing special: Step 3 # the same next step as Step 2
    - Step 3:
        description: After a little diversion our instruction paths converge at Step 3, where the user will try to weigh a probe
        actions:
            - identifier: scale
              action: weigh
              equationIdentifier: weight # an equation identifier can even be a multi character word
        results:  
            - The User weighed the probe and now prepared for calculating some experimentation results: Step 4 # this 
    - Step 4: 
        description: We did measure something with the photometer and weighed a probe. if we add both the result is
        equation: weight^2 + 2*value # use the previously defined equationIdentifiers here, everything supported in ascii math will be eventually supported.
        results:
            - We calculated some results: abc123456 # instruction identifiers can be anything you want
    - abc123456: # just make sure they match up with the instruction which you want to have next.
        description: This is the final instruction, make sure to turn the lights of and turn everything off! :)
        results:
            - experiment is finished: null # if you specify null as the next instruction, the labor-api-cli will know that this is your last instruction.


    
